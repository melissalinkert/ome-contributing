#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# ome documentation build configuration file, created by
# sphinx-quickstart on Wed Feb 22 20:24:38 2012.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys
import os
import shutil

linkcheck_ignore = []
extensions = ['sphinx.ext.extlinks']
# Append the top level directory of the docs, so we can import from the
# config dir.

# Variables used to define Github extlinks
if "SOURCE_BRANCH" in os.environ and len(os.environ.get('SOURCE_BRANCH')) > 0:
    branch = os.environ.get('SOURCE_BRANCH')
else:
    branch = 'develop'

if "SOURCE_USER" in os.environ and len(os.environ.get('SOURCE_USER')) > 0:
    user = os.environ.get('SOURCE_USER')
else:
    user = 'ome'

# -- General configuration ----------------------------------------------------

# General information about the project.
copyright = u'2013-2024, Open Microscopy Environment'
project = u'OME Contributing Developer'
title = project + u' Documentation'

github_root = 'https://github.com/'
omero_github_root = github_root + user + '/openmicroscopy/'
bf_github_root = github_root + user + '/bioformats/'

main_github_root = github_root + 'openmicroscopy'
scc_github_root = github_root + 'snoopycrimecop'

# cf. omero_github_root, bf_github_root
omero_main_github_root = main_github_root + '/openmicroscopy/'
bf_main_github_root = main_github_root + '/bioformats/'

omero_subs_github_root = github_root + 'ome/omero-{}/{}/{}/%s'

# Variables used to define Jenkins extlinks (ci-master)
jenkins_root = 'https://ci.openmicroscopy.org'
jenkins_job_root = jenkins_root + '/job'
jenkins_view_root = jenkins_root + '/view'

# Variables used to define Jenkins extlinks (merge-ci)
mergeci_root = 'https://merge-ci.openmicroscopy.org/jenkins'
mergeci_job_root = mergeci_root + '/job'
mergeci_view_root = mergeci_root + '/view'

# Variables used to define other extlinks
cvs_root = 'http://cvs.openmicroscopy.org.uk'
trac_root = 'https://trac.openmicroscopy.org/ome'
oo_root = 'https://www.openmicroscopy.org'
oo_site_root = oo_root + '/site'
lists_root = 'http://lists.openmicroscopy.org.uk'
downloads_root = 'https://downloads.openmicroscopy.org'
help_root = 'https://help.openmicroscopy.org'
docs_root = 'https://docs.openmicroscopy.org'
imagesc_root = 'https://forum.image.sc'

extlinks = {
    'modeldoc': (oo_site_root + '/support/ome-model/%s', None),
    'team_plone' : (oo_site_root + '/team/%s', None),
    # image.sc
    'imagesc': (imagesc_root + '/%s', '#%s'),
    # Trac links
    'ticket': (trac_root + '/ticket/%s', '#%s'),
    'milestone': (trac_root + '/milestone/%s', None),
    'report': (trac_root + '/report/%s', None),
    # Jenkins links (ci-master)
    'jenkins': (jenkins_root + '/%s', None),
    'jenkinsjob': (jenkins_job_root + '/%s', None),
    'jenkinsview': (jenkins_view_root + '/%s', None),
    # Jenkins links (merge-ci)
    'mergeci': (mergeci_root + '/%s', None),
    'mergecijob': (mergeci_job_root + '/%s', None),
    # Mailing list/forum links
    'ome-users': (lists_root + '/pipermail/ome-users/%s', None),
    'ome-devel': (lists_root + '/pipermail/ome-devel/%s', None),
    'forum': (oo_root + '/community/%s', None),
    # Website links
    'community': (oo_root + '/support/%s', None),
    'omero': (oo_root + '/omero/%s', None),
    'bf': (oo_root + '/bio-formats/%s', None),
    'secvuln': (oo_root + '/security/advisories/%s', None),
    'security': (oo_root + '/security/%s', None),
    'presentations': (downloads_root + '/presentations/%s', None),
    # Doc links
    'omerodoc': (docs_root + '/omero/latest/%s', None),
    'model_doc': (docs_root + '/latest/ome-model/%s', None),
    'devs_doc': (docs_root + '/contributing/%s', None),
    'schema': (oo_root + '/Schemas/%s', None),
    # Help links
    'help': (help_root + '/%s', None),
    # Miscellaneous links
    'snapshot': (cvs_root + '/snapshots/%s', None),
    'zeroc': ('https://zeroc.com/%s', None),
    'zerocforum': ('https://forums.zeroc.com/discussion/%s', None),
    'zerocdoc': ('https://doc.zeroc.com/%s', None),
    'djangodoc': ('https://docs.djangoproject.com/en/1.11/%s', None),
    'doi': ('https://dx.doi.org/%s', None),
    'pypi': ('https://pypi.org/project/%s', None),
    # Github links
    'omero_subs_github_repo_root': (github_root + 'ome/%s', None),
    'omero_source': (omero_github_root + 'blob/' + branch + '/%s', None),
    'omero_sourcedir': (omero_github_root + 'tree/' + branch + '/%s', None),
    'omero_commit': (omero_github_root + 'commit/%s', None),
    'omero_pr': (omero_main_github_root + 'pull/%s', None),
    'omero_scc_branch': (scc_github_root + '/openmicroscopy/tree/%s', None),
    'omero_model_source': (omero_subs_github_root.format('model', 'blob', 'master'), None),
    'omero_common_source': (omero_subs_github_root.format('common', 'blob', 'master'), None),
    'omero_romio_source': (omero_subs_github_root.format('romio', 'blob', 'master'), None),
    'omero_renderer_source': (omero_subs_github_root.format('renderer', 'blob', 'master'), None),
    'omero_server_source': (omero_subs_github_root.format('server', 'blob', 'master'), None),
    'omero_blitz_source': (omero_subs_github_root.format('blitz', 'blob', 'master'), None),
    'bf_source': (bf_github_root + 'blob/' + branch + '/%s', None),
    'bf_sourcedir': (bf_github_root + 'tree/' + branch + '/%s', None),
    'bf_commit': (bf_github_root + 'commit/%s', None),
    'bf_pr': (bf_main_github_root + 'pull/%s', None),
    'bf_scc_branch': (scc_github_root + '/bioformats/tree/%s', None),
    'bf_doc_source': ('https://github.com/ome/bio-formats-documentation/blob/master' + '/%s', None),
    'omedoc_scc_branch': (scc_github_root + '/ome-documentation/tree/%s', None),
    'omehelp_scc_branch': (scc_github_root + '/ome-help/tree/%s', None),
    'figure_scc_branch': (scc_github_root + '/omero-figure/tree/%s', None),

    # Doc links
    'omero_doc': (docs_root + '/latest/omero/%s', None),
    'bf_doc': (docs_root + '/latest/bio-formats/%s', None),
    'ansible_docs': ('https://docs.ansible.com/ansible/2.6/%s', None),
    }


extensions += ['sphinx.ext.graphviz']
graphviz_dot_args = [
    '-Nfontname=Helvetica',
    '-Nfontsize=9',
    '-Nshape=box',
    '-Gfixedsize=true']
graphviz_output_format = 'svg'

rst_epilog = """
.. _Hibernate: http://www.hibernate.org
.. _ZeroC: https://zeroc.com
.. _Ice: https://zeroc.com
.. _Jenkins: https://jenkins.io
.. _roadmap: https://trac.openmicroscopy.org/ome/roadmap
.. _OME artifactory: https://artifacts.openmicroscopy.org
.. _Open Microscopy Environment: https://www.openmicroscopy.org
.. _Glencoe Software, Inc.: https://www.glencoesoftware.com/
.. _Pillow: https://pillow.readthedocs.org
.. _Matplotlib: https://matplotlib.org/
.. _Django 1.8: https://docs.djangoproject.com/en/1.8/releases/1.8/
.. _Django 1.6: https://docs.djangoproject.com/en/1.6/releases/1.6/
.. _Python: https://www.python.org
.. _Libjpeg: http://libjpeg.sourceforge.net/
.. _Django: https://www.djangoproject.com/
.. _PyPI: https://pypi.org
.. _Conda: https://docs.conda.io/en/latest/
.. _PyTables: http://pytables.org
.. _image.sc: https://forum.image.sc/
.. _Web Server Stats: https://docs.google.com/spreadsheets/d/1K7ab1UpuiE3FmAq3et7OpyxFwumrT7z8tGrDDBSDxsk/edit#gid=908994883

.. |SSH| replace:: :abbr:`SSH (Secure Shell)`
.. |VM| replace:: :abbr:`VM (Virtual Machine)`
.. |OS| replace:: :abbr:`OS (Operating System)`
.. |SSL| replace:: :abbr:`SSL (Secure Socket Layer)`
.. |JDK| replace:: :abbr:`JDK (Java Development Kit)`
.. |JMX| replace:: :abbr:`JMX (Java Management Extensions)`
.. |JRE| replace:: :abbr:`JRE (Java Runtime Environment)`
.. |JVM| replace:: :abbr:`JVM (Java Virtual Machine)`
.. |PID| replace:: :abbr:`PID (process ID)`
.. |HDD| replace:: :abbr:`HDD (Hard Disk Drive)`
.. |CLI| replace:: :abbr:`CLI (Command Line Interface)`

.. |OME| replace:: `Open Microscopy Environment`_
.. |Glencoe| replace:: `Glencoe Software, Inc.`_
"""

rst_epilog += """
.. _GitHub: https://github.com
.. _GitHub Pages: https://pages.github.com
.. _Git: https://git-scm.com/
.. _Semantic Versioning: https://semver.org
.. _CMake: https://cmake.org/
.. _openmicroscopy.git: https://github.com/openmicroscopy/openmicroscopy
.. _bioformats.git: https://github.com/openmicroscopy/bioformats
.. _ome-documentation.git: https://github.com/openmicroscopy/ome-documentation
.. _ome-cmake-superbuild.git: https://github.com/ome/ome-cmake-superbuild
.. _scripts.git: https://github.com/ome/scripts
.. _Sonatype: https://www.sonatype.com/
..  |merge| replace:: Merges PRs using :ref:`scc merge`
..  |buildOMERO| replace:: Builds the OMERO.server and the clients using :omero_source: `OMERO.sh <docs/hudson/OMERO.sh>`
..  |archiveOMEROartifacts| replace:: Archives the build artifacts
..  |copyreleaseartifacts| replace:: Copies the build artifacts to a LDAP-protected folder under downloads.openmicroscopy.org
..  |promoteOMERO| replace:: copies the artifacts to necromancer
..  |updatesubmodules| replace:: Updates submodules using ``scc update-submodules``
..  |buildBF| replace:: Builds Bio-Formats using ``clean release tools utils docs docs-sphinx dist-bftools dist-matlab dist-octave test``
..  |buildFiles| replace:: Builds OME Files components from git using ``cmake``
..  |buildFilesSB| replace:: Builds OME Files components and third-party dependencies using ``cmake``
..  |buildFilesSRC| replace:: Builds OME Files components from source release archives using ``cmake``
..  |sphinxbuild| replace:: Runs ``make clean html`` to build the HTML Sphinx documentation
..  |linkcheck| replace:: Runs ``make linkcheck``
..  |ssh-doc| replace:: Copies the HTML documentation over SSH to
..  |deploy-doc| replace:: Runs :ref:`scc deploy` to update
"""

rst_epilog += '.. |C| replace:: **Check**'

# -- Options for LaTeX output -------------------------------------------------

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual])
# target = 'OME-Contributing-Developer' + '.tex'
# latex_documents = [
#  (master_doc, target, title, author, 'manual'),
# ]

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
# latex_use_parts = False

# The name of an image file (relative to this directory) to place at the top of
# the title page.
# latex_logo = '../common/images/ome-tight.pdf'

# -- Options for the linkcheck builder ----------------------------------------

# Regular expressions that match URIs that should not be checked when doing a
# linkcheck build
linkcheck_ignore += [
    r'http://localhost:\d+/?', 'http://localhost/',
    'https://github.com/openmicroscopy/ome-internal',
    r'https://github.com/account/ssh',
    r'https://spreadsheets.google.com/.*',
    r'https://docs.google.com/.*',
    r'https://trac.openmicroscopy.org/ome/admin/.*',
    r'https://oss.sonatype.org/.*',  # Requires login
    github_root + 'ome/'
]

def copy_legacy_redirects(app, exception):
    """
    see: https://tech.signavio.com/2017/managing-sphinx-redirects
    """
    print("Adding redirects:")
    redirect_files = [
        'python-development.html',

    ]
    if app.builder.name == 'html':
        for html_src_path in redirect_files:
            target_path = app.outdir + '/' + html_src_path
            src_path = app.srcdir + '/' + html_src_path
            if os.path.isfile(src_path):
                target_dir = os.path.dirname(target_path)
                if not os.path.exists(target_dir):
                    os.makedirs(target_dir)
                shutil.copyfile(src_path, target_path)
                print("  %s" % html_src_path)


html_theme = "sphinx_rtd_theme"

def setup(app):
    app.connect('build-finished', copy_legacy_redirects)

